import { ChannelMessage } from 'mezon-sdk';
import { Command } from 'src/bot/base/commandRegister.decorator';
import { CommandMessage } from 'src/bot/base/command.abstract';
import { MezonClientService } from 'src/mezon/services/mezon-client.service';
import { getRandomColor } from 'src/bot/utils/helps';
import { ButtonStyle } from 'src/bot/constants/types';
import { createButton, createActionRow } from 'src/bot/utils/component-helpers';
import { safeReply } from 'src/bot/utils/reply-helpers';

@Command('help')
export class HelpCommand extends CommandMessage {
  constructor(clientService: MezonClientService) {
    super(clientService);
  }

  async execute(args: string[], message: ChannelMessage): Promise<any> {
    const messageChannel = await this.getChannelMessage(message);
    if (!messageChannel) return;

    // T·∫°o c√°c button h∆∞·ªõng d·∫´n
    const helpButtons = [
      createButton(ButtonStyle.BLUE, 'H∆∞·ªõng d·∫´n Command', 'help:command'),
      createButton(ButtonStyle.RED, 'H∆∞·ªõng d·∫´n Bug', 'help:bug'),
      createButton(ButtonStyle.GREEN, 'H∆∞·ªõng d·∫´n Solution', 'help:solution'),
    ];

    const buttonRow = createActionRow(helpButtons);

    return safeReply(messageChannel, {
      embed: [
        {
          color: getRandomColor(),
          title: 'ü§ñ DevHelper Bot - H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng',
          description: 'Bot h·ªó tr·ª£ l·∫≠p tr√¨nh vi√™n l∆∞u tr·ªØ v√† t√¨m ki·∫øm c√°c l·ªánh, ghi nh·∫≠n bugs v√† gi·∫£i ph√°p.',
          fields: [
            {
              name: 'üìù Qu·∫£n l√Ω l·ªánh',
              value: '`/command save` - L∆∞u l·ªánh m·ªõi\n' +
                    '`/command list` - Xem danh s√°ch l·ªánh theo danh m·ª•c\n' +
                    '`/command detail` - Xem chi ti·∫øt l·ªánh\n' +
                    '`/command find` - T√¨m ki·∫øm l·ªánh theo t·ª´ kh√≥a\n' +
                    '`/command update` - C·∫≠p nh·∫≠t l·ªánh\n' +
                    '`/command delete` - X√≥a l·ªánh\n' +
                    '`/command restore` - Kh√¥i ph·ª•c l·ªánh ƒë√£ x√≥a',
            },
            {
              name: 'üêõ Qu·∫£n l√Ω bug',
              value: '`/bug create` - B√°o c√°o bug m·ªõi\n' +
                    '`/bug list` - Xem danh s√°ch bug theo tr·∫°ng th√°i\n' +
                    '`/bug detail` - Xem chi ti·∫øt bug\n' +
                    '`/bug update` - C·∫≠p nh·∫≠t th√¥ng tin bug',
            },
            {
              name: 'üí° Qu·∫£n l√Ω gi·∫£i ph√°p',
              value: '`/solution create` - Th√™m gi·∫£i ph√°p cho bug\n' +
                    '`/solution list` - Xem danh s√°ch gi·∫£i ph√°p cho bug\n' +
                    '`/solution detail` - Xem chi ti·∫øt gi·∫£i ph√°p\n' +
                    '`/solution update` - C·∫≠p nh·∫≠t gi·∫£i ph√°p',
            },
            {
              name: 'üîç T√¨m ki·∫øm',
              value: '`/search` - T√¨m ki·∫øm ƒëa lo·∫°i (l·ªánh, bug, gi·∫£i ph√°p)\n' +
                    '`/search bugs` - T√¨m ki·∫øm bugs v·ªõi solutions',
            },
            {
              name: '‚ùì Tr·ª£ gi√∫p',
              value: 'G√µ `/help` ƒë·ªÉ xem h∆∞·ªõng d·∫´n n√†y\n' +
                    'M·ªói l·ªánh c√≥ subcommand ri√™ng, v√≠ d·ª•: `/command save`\n' +
                    'D√πng c√∫ ph√°p tham s·ªë `--name="value"` khi th·ª±c hi·ªán l·ªánh\n' +
                    'Nh·∫≠p l·ªánh kh√¥ng c√≥ tham s·ªë ƒë·ªÉ xem h∆∞·ªõng d·∫´n chi ti·∫øt',
            },
          ],
          footer: {
            text: 'DevHelper Bot v1.0.0',
          },
        },
      ],
      components: [buttonRow],
    });
  }
}